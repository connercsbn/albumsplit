{"version":3,"sources":["modules/TimeCodes.js","modules/TimeCodesDisplayer.js","modules/NextButton.js","modules/Stepper.js","modules/EditableAlbumAttribute.js","style/gruvBox.js","utils/handleToken.js","App.js","reportWebVitals.js","index.js"],"names":["TimeCodes","timeCodes","timeCodesList","original","showingIndex","curr","timeCodesString","split","setTimeCodesString","useSpring","from","opacity","transform","to","animStyle","api","useStyles","makeStyles","theme","root","padding","display","lineHeight","useEffect","index","timeCodesToString","tc","map","time","songTitle","join","handleReset","useCallback","console","log","div","style","position","width","TextField","label","length","margin","Z","disabled","maxRows","minRows","color","value","onChange","e","target","square","spellCheck","id","fullWidth","multiline","defaultValue","variant","ArrowButton","styled","Button","minWidth","TimeCodesDisplayer","setIndex","getZ","zIndex","Box","height","onClick","left","top","right","NextButton","activeStep","albumUrl","handleNext","zipUrl","classes","className","button","ColorlibStepIcon","props","useColorlibStepIconStyles","active","completed","icons","1","2","3","clsx","String","icon","ColorlibConnector","withStyles","alternativeLabel","backgroundImage","line","border","backgroundColor","borderRadius","StepConnector","justifyContent","alignItems","background","boxShadow","content","bottom","transition","marginRight","spacing","palette","info","instructions","marginTop","marginBottom","secondary","getInstruction","HorizontalLinearStepper","initialStepsContent","handleSubmit","handleFinalize","loading","setLoading","handleUrlChange","setActiveStep","useState","stepsContent","setStepsContent","steps","step","prevActiveStep","submitUrlStep","useMemo","onSubmit","preventDefault","noValidate","autoComplete","autoFocus","size","Stepper","connector","Step","StepLabel","handleIconClick","StepIconComponent","Typography","Paper","elevation","css","paddingBottom","EditableAlbumAttribute","setNewInfo","spellcheck","Tooltip","title","placement","alignSelf","fontSize","colors","gruvBox","createTheme","type","primary","main","warning","text","hint","divider","paper","default","shape","a","undefined","Cookies","get","fetch","credentials","res","json","set","csrfToken","handleToken","App","setId","intervalId","setIntervalId","currentTask","setCurrentTask","percent","setPercent","complete","setComplete","fetchedUrl","setFetchedUrl","timecodes","originalAlbumInfo","setOriginalAlbumInfo","setSplit","setAlbumUrl","albumTitleId","setAlbumTitleId","albumTimeCodes","setAlbumTimeCodes","albumTitle","setAlbumTitle","albumArtist","setAlbumArtist","albumYear","setAlbumYear","setZipUrl","audioType","setAudioType","timeCodesIndex","setTimeCodesIndex","formControl","selectEmpty","WebFont","load","google","families","method","headers","Accept","body","JSON","stringify","url","titleid","artist","year","interval","setInterval","progress","description","result","zipurl","clearInterval","approveInfoStep","FormControlLabel","control","Checkbox","checked","name","FormControl","InputLabel","Select","labelId","MenuProps","disableScrollLock","MenuItem","float","fontStyle","marginLeft","downloadStep","LinearProgress","downloadButton","textAlign","maxWidth","href","ThemeProvider","CssBaseline","Container","overflow","window","location","reload","cursor","textDecoration","fontWeight","fontFamily","event","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acf3811b.chunk.js","sourcesContent":["import { useEffect, useCallback } from \"react\";\nimport { TextField, Button, Tooltip } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useSpring, animated } from \"react-spring\";\nimport ReplayIcon from \"@material-ui/icons/ReplayOutlined\";\n\nconst getTimeCodeLabel = (index) => {\n  const firstThree = [\"1st\", \"2nd\", \"3rd\"];\n  if (index < 3) {\n    return `Timecodes from ${firstThree[index]} comment`;\n  } else {\n    return `Timecodes from ${index + 1}th comment`;\n  }\n};\n\nconst TimeCodes = ({\n  timeCodes,\n  timeCodesList,\n  original,\n  showingIndex,\n  curr,\n  timeCodesString,\n  split,\n  setTimeCodesString,\n}) => {\n  const [animStyle, api] = useSpring(() => ({\n    from: { opacity: 0, transform: \"translateX(100%)\" },\n    to: { opacity: 1, transform: \"translateX(0%)\" },\n  }));\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      padding: \"1em\",\n      display: \"block\",\n      lineHeight: 0.75,\n    },\n  }));\n  useEffect(() => {\n    if (showingIndex === curr) {\n      api({\n        opacity: 1,\n        transform: \"translateX(0%)\",\n      });\n    } else if (showingIndex > curr) {\n      api({\n        opacity: 0,\n        transform: \"translateX(-100%)\",\n      });\n    } else if (showingIndex < curr) {\n      api({\n        opacity: 0,\n        transform: \"translateX(100%)\",\n      });\n    }\n  }, [api, showingIndex, curr]);\n\n  const classes = useStyles();\n  const timeCodesToString = (tc) => {\n    if (tc) {\n      return tc\n        .map(([time, songTitle], index) => `${time} ${songTitle}`)\n        .join(\"\\n\");\n    } else {\n      return \"\";\n    }\n  };\n\n  const handleReset = useCallback(() => {\n    setTimeCodesString(timeCodesToString(original[showingIndex]));\n  }, [original, showingIndex, setTimeCodesString]);\n\n  useEffect(() => {\n    handleReset();\n  }, [showingIndex, handleReset]);\n\n  useEffect(() => {\n    if (timeCodes) {\n      setTimeCodesString(timeCodesToString(timeCodes));\n    }\n    console.log(timeCodes);\n    console.log(timeCodesList);\n  }, [timeCodes, setTimeCodesString, timeCodesList]);\n\n  return (\n    <>\n      <animated.div\n        style={{ ...animStyle, position: \"absolute\", width: \"100%\" }}\n      >\n        <TextField\n          label={\n            timeCodesList?.length > 1 ? getTimeCodeLabel(curr) : \"Timecodes\"\n          }\n          style={{position: 'relative', display: 'block', width: 'calc(100% - 80px)', margin: 'auto'}}Z\n          disabled={!split}\n          maxRows={13}\n          minRows={13}\n          color=\"secondary\"\n          value={timeCodesString}\n          onChange={(e) => setTimeCodesString(e.target.value)}\n          square={false}\n          spellCheck={false}\n          id=\"outlined-multiline-static\"\n          fullWidth={true}\n          multiline\n          defaultValue=\"Default Value\"\n          variant=\"outlined\"\n        ></TextField>\n      </animated.div>\n    </>\n  );\n};\n\nexport default TimeCodes;\n","import { Button } from \"@material-ui/core\";\nimport TimeCodes from \"./TimeCodes\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport Box from \"@material-ui/core/Box\";\nimport { styled } from \"@material-ui/core/styles\";\n\nconst ArrowButton = styled(Button)({\n  padding: \"5px\",\n  minWidth: 0,\n});\n\nconst TimeCodesDisplayer = ({\n  timeCodes,\n  original,\n  index,\n  setIndex,\n  timeCodesString,\n  split,\n  setTimeCodesString,\n}) => {\n  const getZ = (curr) => {\n    if (curr === index) {\n      return { zIndex: 100 };\n    } else {\n      return { zIndex: 0 };\n    }\n  };\n\n  return (\n    <>\n      <Box\n        style={{\n          position: \"relative\",\n          height: \"300px\",\n        }}\n      >\n        {index > 0 && (\n          <ArrowButton\n            onClick={() => {\n              setIndex(index - 1);\n            }}\n            style={{\n              position: \"absolute\",\n              left: \"0px\",\n              top: \"118px\",\n              zIndex: 200,\n            }}\n          >\n            <ArrowBackIosIcon\n              style={{ transform: \"translateX(4px)\", padding: 0 }}\n            />\n          </ArrowButton>\n        )}\n        {timeCodes.length ? (\n          timeCodes.map((tc, curr) => (\n            <div\n              id=\"timecodes\"\n              key={curr}\n              style={{ ...getZ(curr), position: \"relative\", width: \"100%\" }}\n            >\n              <TimeCodes\n                style={{ position: \"absolute\" }}\n                showingIndex={index}\n                curr={curr}\n                split={split}\n                timeCodesList={timeCodes}\n                timeCodes={tc}\n                original={original}\n                timeCodesString={timeCodesString}\n                setTimeCodesString={setTimeCodesString}\n              />\n            </div>\n          ))\n        ) : (<p></p>)}  {/*\n            for some reason just using \"timeCodes && ... \"\n            displays a 0 in place of the timecodes while they are loading.\n            Don't know why atm.\n        */}\n        {index < timeCodes.length - 1 && (\n          <ArrowButton\n            onClick={() => {\n              setIndex(index + 1);\n            }}\n            style={{\n              position: \"absolute\",\n              right: \"0px\",\n              top: \"118px\",\n              zIndex: 200,\n            }}\n          >\n            <ArrowForwardIosIcon style={{ padding: 0 }} />\n          </ArrowButton>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default TimeCodesDisplayer;\n","import Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function NextButton({\n  activeStep,\n  albumUrl,\n  zipUrl,\n  handleNext,\n  classes,\n}) {\n  if (activeStep === 2) {\n    return ''\n  } else {\n    return (\n      <Button\n        disabled={activeStep === 0 ? albumUrl.length < 1 : false}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => {\n          handleNext(activeStep);\n        }}\n        className={classes.button}\n      >\n        Next\n      </Button>\n    );\n  }\n}\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport NextButton from \"./NextButton\";\nimport {\n  Button,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  Typography,\n  TextField,\n  StepConnector,\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { css } from \"@emotion/react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport LinkIcon from \"@material-ui/icons/InsertLinkRounded\";\nimport ListIcon from \"@material-ui/icons/FormatAlignLeftRounded\";\nimport DoneIcon from \"@material-ui/icons/DoneRounded\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport { set } from \"js-cookie\";\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons = {\n    1: <LinkIcon />,\n    2: <ListIcon />,\n    3: <DownloadIcon />,\n  };\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      {completed ? <DoneIcon /> : icons[String(props.icon)]}\n    </div>\n  );\n}\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient( 95deg,var(--cyan) 0%, var(--yellow) 30%,var(--magenta) 100%)\",\n    },\n  },\n  completed: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient( 95deg,var(--blue) 0%,var(--cyan) 100%)\",\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: \"#eaeaf0\",\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: \"#918d85\",\n    zIndex: 1,\n    color: \"rgba(250,250,255,1)\",\n    width: 50,\n    height: 50,\n    display: \"flex\",\n    borderRadius: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  active: {\n    position: 'relative',\n    background:\n      'linear-gradient( 136deg, #ffca4e 0%, #e6b23a 50%, #994537 100%)',\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\n    '&::before': {\n      position: 'absolute',\n      content: '\"\"',\n      top:0,right:0,bottom:0,left:0,\n      borderRadius:'50%',\n      backgroundImage: 'linear-gradient( 136deg, #fffc 0%, #e8aa1899 50%, #664d1c 100%)',\n\n      zIndex: -1,\n      transition: 'opacity 0.2s ease',\n      opacity: 0\n    },\n    '&:hover, &:focus': {\n      '&::before': {\n        opacity: 0.8\n      }\n    }\n  },\n  completed: {\n    position: 'relative',\n    '&::before': {\n      position: 'absolute',\n      content: '\"\"',\n      top:0,right:0,bottom:0,left:0,\n      borderRadius:'50%',\n      backgroundImage: 'linear-gradient(136deg, #bfe8b1 0%, #4b8256 60%, #50826e 100%)',\n      zIndex: -1,\n      transition: 'opacity 0.2s ease',\n      opacity: 0\n    },\n    '&:hover, &:focus': {\n      '&::before': {\n        opacity: 0.5\n      }\n    },\n    backgroundImage:\n      \"linear-gradient( 136deg, var(--cyan) 0%, var(--blue) 60%, var(--blue) 100%)\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    button: {\n      marginRight: theme.spacing(100),\n      background: theme.palette.info,\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n      color: theme.palette.secondary,\n    },\n  },\n}));\n\nfunction getSteps() {\n  return [\"Input YouTube link\", \"Confirm tracklist\", \"Prepare download\"];\n}\nfunction getInstruction(activeStep) {\n  return ['Pick a YouTube album or audio book whose timecodes are in the description or comments, and this will download the album, separate and tag each track, and put it in a zip file','Here are the best timestamps we could find. These will be used to split the album, so fix any mistakes here or write your own.'][activeStep]\n}\n\nexport default function HorizontalLinearStepper({\n  initialStepsContent,\n  handleSubmit,\n  handleFinalize,\n  albumUrl,\n  loading,\n  setLoading,\n  handleUrlChange,\n  zipUrl,\n  setActiveStep,\n  activeStep,\n}) {\n  const classes = useStyles();\n  const [stepsContent, setStepsContent] = useState(0);\n  const steps = getSteps();\n\n  const handleIconClick = (index) => {\n    if (activeStep > index) {\n      setActiveStep(index);\n    } else if (index === 1 && activeStep === 0 && albumUrl) {\n      handleNext();\n    }\n  };\n\n  const handleNext = useCallback(\n    (step) => {\n      console.log(step);\n      if (step === 0) {\n        handleSubmit();\n      } else if (step === 1) {\n        handleFinalize();\n      }\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    },\n    [handleFinalize, handleSubmit, setActiveStep]\n  );\n\n  const submitUrlStep = useMemo(\n    () => (\n      <>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleNext(activeStep);\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            style={{ margin: \"1em 0\" }}\n            variant=\"outlined\"\n            color=\"secondary\"\n            onChange={handleUrlChange}\n\t    spellCheck={false}\n            autoFocus\n            id=\"standard-basic\"\n            label=\"YouTube URL\"\n            value={albumUrl}\n            size=\"large\"\n            fullWidth\n          />\n        </form>\n      </>\n    ),\n    [handleUrlChange, albumUrl, handleNext, activeStep]\n  );\n\n  useEffect(() => {\n    setStepsContent([\n      submitUrlStep,\n      initialStepsContent[0],\n      initialStepsContent[1],\n      initialStepsContent[2],\n    ]);\n  }, [initialStepsContent, submitUrlStep]);\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setLoading(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper\n        activeStep={activeStep}\n        alternativeLabel\n        style={{\n          backgroundColor: \"unset\",\n          padding: '1em 0.4em'\n        }}\n        connector={<ColorlibConnector />}\n      >\n        {steps.map((label, index) => {\n          return (\n            <Step key={label}>\n              <StepLabel\n                onClick={() => handleIconClick(index)}\n                StepIconComponent={ColorlibStepIcon}\n              >\n                {label}\n              </StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              {stepsContent[activeStep]}\n            </Typography>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleReset}\n              className={classes.button}\n            >\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions} variant=\"subtitle1\">\n\t\t{activeStep < 2 && <Paper\n                variant=\"elevation\"\n                elevation={3}\n                style={{\n                  padding: \"0.01em 1em\",\n                  margin: \"1em 0\",\n                  //backgroundColor: \"rgba(40,40,40,.9)\",\n                  // border: \"1px solid rgba(255,255,255,.2)\",\n                }}\n              >\n\t\t<p>{getInstruction(activeStep)}</p>\n              </Paper>}\n              <SyncLoader\n                loading={loading && activeStep === 1}\n                size={15}\n                color=\"#8ec07c\"\n                css={css`\n                  position: absolute;\n                  display: block;\n                  margin: 7em auto;\n                  text-align: center;\n                  left: 50%;\n                  left: calc(50% - 28px);\n                `}\n              />\n              {stepsContent[activeStep]}\n            </Typography>\n            <div style={{ paddingBottom: 20 }}>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.button}\n              >\n                Back\n              </Button>\n              <NextButton\n                style={{ zIndex: 200 }}\n                activeStep={activeStep}\n                albumUrl={albumUrl}\n                steps={steps}\n                classes={classes}\n                zipUrl={zipUrl}\n                handleNext={handleNext}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { TextField, Button, Tooltip } from \"@material-ui/core\";\nimport { css } from \"@emotion/react\";\nimport ReplayIcon from \"@material-ui/icons/ReplayOutlined\";\n\nconst EditableAlbumAttribute = ({ info, setNewInfo, original, label }) => {\n  const handleReset = () => {\n    setNewInfo(original);\n  };\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          marginTop: 20,\n          marginBottom: 20,\n        }}\n      >\n        <TextField\n\t  spellcheck={false}\n          value={info}\n          label={label}\n          onChange={(e) => setNewInfo(e.target.value)}\n        />\n        {info !== original && (\n          <Tooltip title=\"Reset\" placement=\"right\">\n            <Button\n              onClick={handleReset}\n              style={{\n                height: \"min-content\",\n                width: \"min-content\",\n                alignSelf: \"center\",\n                color: \"var(--blue)\",\n                minWidth: 0,\n              }}\n            >\n              <ReplayIcon\n                fontSize=\"small\"\n                style={{\n                  width: 20,\n                  height: 20,\n                }}\n              />\n            </Button>\n          </Tooltip>\n        )}\n      </div>\n    </>\n  );\n};\nexport default EditableAlbumAttribute;\n","import { createTheme } from \"@material-ui/core/styles\";\n\nconst colors = {\n  background: \"#1c1e21\",\n  black: \"#928374\",\n  red: \"#fb4934\",\n  green: \"#b8bb26\",\n  yellow: \"#fabd2f\",\n  blue: \"#8cbdab\",\n  magenta: \"#d3869b\",\n  cyan: \"#8ec07c\",\n  white: \"#ebdbb2\",\n  purple: \"#b16286\",\n};\n\nconst gruvBox = createTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: colors.blue,\n    },\n    secondary: {\n      main: colors.yellow,\n    },\n    warning: {\n      main: colors.purple,\n    },\n    text: {\n      primary: colors.white,\n      secondary: colors.white,\n      disabled: colors.white,\n      hint: colors.white,\n      icon: colors.white,\n      divider: colors.white,\n    },\n    background: {\n      paper: colors.background,\n      default: colors.background,\n    },\n  },\n  shape: {\n    borderRadius: 8,\n  },\n});\n\nexport default gruvBox;\n","import Cookies from \"js-cookie\";\nasync function handleToken() {\n  if (Cookies.get(\"csrftoken\") === undefined) {\n    const res = await fetch(\"https://api.conner.soy/csrf/\", {\n      credentials: \"include\",\n    });\n    const json = await res.json();\n    Cookies.set(\"csrftoken\", json.csrfToken);\n  }\n}\nexport default handleToken;\n","import \"./App.css\";\nimport \"@fontsource/roboto\";\nimport Cookies from \"js-cookie\";\nimport TimeCodesDisplayer from \"./modules/TimeCodesDisplayer\";\nimport Stepper from \"./modules/Stepper\";\nimport WebFont from \"webfontloader\";\nimport EditableAlbumAttribute from \"./modules/EditableAlbumAttribute\";\nimport {\n  Select,\n  makeStyles,\n  FormControl,\n  FormControlLabel,\n  MenuItem,\n  Button,\n  InputLabel,\n  LinearProgress,\n  CssBaseline,\n  Container,\n  Typography,\n  ThemeProvider,\n  Checkbox,\n} from \"@material-ui/core\";\nimport gruvBox from \"./style/gruvBox\";\n// import Header from \"./modules/Header\";\nimport { useState, useEffect } from \"react\";\nimport handleToken from \"./utils/handleToken\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [id, setId] = useState();\n  const [intervalId, setIntervalId] = useState();\n  const [currentTask, setCurrentTask] = useState(\"\");\n  const [percent, setPercent] = useState(\"\");\n  const [complete, setComplete] = useState(false);\n  const [fetchedUrl, setFetchedUrl] = useState(\"\");\n  const [originalAlbumInfo, setOriginalAlbumInfo] = useState({\n    timecodes: [\"\"],\n  });\n  const [split, setSplit] = useState(true);\n  const [albumUrl, setAlbumUrl] = useState(\"\");\n  const [albumTitleId, setAlbumTitleId] = useState(\"\");\n  const [albumTimeCodes, setAlbumTimeCodes] = useState([]);\n  const [albumTitle, setAlbumTitle] = useState(\"\");\n  const [albumArtist, setAlbumArtist] = useState(\"\");\n  const [albumYear, setAlbumYear] = useState(\"\");\n  const [zipUrl, setZipUrl] = useState(\"\");\n  const [audioType, setAudioType] = useState(\"opus\");\n  const [timeCodesIndex, setTimeCodesIndex] = useState(0);\n  const [timeCodesString, setTimeCodesString] = useState(\"\");\n  const [activeStep, setActiveStep] = useState(0);\n\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(0),\n      minWidth: 220,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n  const classes = useStyles();\n\n  useEffect(() => {\n    WebFont.load({\n      google: {\n        families: [\"Roboto Slab\", \"Droid Sans\", \"Chilanka\"],\n      },\n    });\n  }, []);\n\n  const handleAudioTypeChange = (e) => {\n    setAudioType(e.target.value);\n  };\n\n  const handleUrlChange = (event) => {\n    setAlbumUrl(event.target.value);\n  };\n  const handleFinalize = async () => {\n    const res = await fetch(\"https://api.conner.soy/get_album/\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n        Accept: \"applications/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        title: albumTitle,\n        url: albumUrl,\n        titleid: albumTitleId,\n        timecodes: timeCodesString,\n        artist: albumArtist,\n        year: albumYear,\n        split: split,\n      }),\n    });\n    const json = await res.json();\n    setId(json.id);\n  };\n  useEffect(() => {\n    handleToken();\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      setLoading(true);\n      const interval = setInterval(async () => {\n        const res = await fetch(\"https://api.conner.soy/progress/\" + id);\n        const json = await res.json();\n        console.log(json);\n        setPercent(json.progress.percent);\n        setCurrentTask(json.progress.description);\n        if (json.complete === true) {\n          if (json.result.timecodes) {\n            setComplete(true);\n            setAlbumTimeCodes(json.result.timecodes);\n            setAlbumTitle(json.result.title);\n            setAlbumArtist(json.result.artist);\n            setAlbumYear(json.result.year);\n            setAlbumTitleId(json.result.titleid);\n            setOriginalAlbumInfo({\n              timecodes: json.result.timecodes,\n              title: json.result.title,\n              artist: json.result.artist,\n              year: json.result.year,\n            });\n            setLoading(false);\n            console.log(\"complete\");\n          } else {\n            if (json.result.zipurl) {\n              setComplete(true);\n              setZipUrl(json.result.zipurl);\n              setLoading(false);\n              setActiveStep(3);\n            }\n          }\n        }\n      }, 500);\n      setIntervalId(interval);\n    }\n  }, [id]);\n\n  const handleSubmit = async () => {\n    if (albumUrl === fetchedUrl) {\n      return;\n    }\n    setLoading(true);\n    const res = await fetch(\"https://api.conner.soy/yturl/\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n        Accept: \"applications/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ url: albumUrl }),\n    });\n    setFetchedUrl(albumUrl);\n    const json = await res.json();\n    setId(json.id);\n    setLoading(false);\n    console.log(json);\n  };\n\n  useEffect(() => {\n    if (complete) {\n      clearInterval(intervalId);\n      setComplete(false);\n    }\n  }, [complete, intervalId]);\n\n  const approveInfoStep = (\n    <>\n      <EditableAlbumAttribute\n        info={albumTitle}\n        setNewInfo={setAlbumTitle}\n        original={originalAlbumInfo.title}\n        label=\"Album title\"\n      />\n      <EditableAlbumAttribute\n        info={albumArtist}\n        setNewInfo={setAlbumArtist}\n        original={originalAlbumInfo.artist}\n        label=\"Artist\"\n      />\n      <EditableAlbumAttribute\n        info={albumYear}\n        setNewInfo={setAlbumYear}\n        original={originalAlbumInfo.year}\n        label=\"Year\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={split}\n            onChange={() => setSplit(!split)}\n            name=\"Split tracks\"\n            color=\"primary\"\n          />\n        }\n        label=\"Split tracks\"\n      />\n      <div\n        style={{\n          display: \"flex\",\n          marginTop: 20,\n          marginBottom: 20,\n        }}\n      >\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"demo-simple-select-autowidth-label\">\n            Audio file type\n          </InputLabel>\n          <Select\n            labelId=\"select-audio-type\"\n            id=\"select-audio-type\"\n            value={audioType}\n            onChange={handleAudioTypeChange}\n            MenuProps={{ disableScrollLock: true }}\n          >\n            <MenuItem value={\"opus\"}>\n              Opus{\" \"}\n              <span\n                style={{\n                  fontSize: \".8em\",\n                  float: \"right\",\n                  fontStyle: \"italic\",\n                  marginLeft: \"8px\",\n                }}\n              >\n                higher quality\n              </span>\n            </MenuItem>\n            <MenuItem value={\"mp3\"}>\n              MP3{\" \"}\n              <span\n                style={{\n                  fontSize: \".8em\",\n                  float: \"right\",\n                  fontStyle: \"italic\",\n                  marginLeft: \"8px\",\n                }}\n              >\n                lower quality\n              </span>{\" \"}\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n      <TimeCodesDisplayer\n        timeCodesIndex={timeCodesIndex}\n        original={originalAlbumInfo.timecodes}\n        split={split}\n        timeCodes={albumTimeCodes}\n        index={timeCodesIndex}\n        setIndex={setTimeCodesIndex}\n        timeCodesString={timeCodesString}\n        setTimeCodesString={setTimeCodesString}\n      />\n    </>\n  );\n  const downloadStep = currentTask && (\n    <>\n      <LinearProgress variant={\"determinate\"} value={percent} />\n      <Typography>{currentTask}</Typography>\n    </>\n  );\n\n  const downloadButton = (\n    <>\n      <Button\n        color=\"secondary\"\n        style={{\n          display: \"flex\",\n          margin: \"auto\",\n          textAlign: \"center\",\n          fontSize: \"1.2em\",\n          maxWidth: \"9em\",\n        }}\n        variant=\"contained\"\n        href={zipUrl}\n      >\n        Download\n      </Button>\n    </>\n  );\n\n  return (\n    <>\n      <ThemeProvider theme={gruvBox}>\n        <CssBaseline />\n        <Container\n          maxWidth=\"md\"\n          style={{\n            padding: \"2% 1em\",\n            overflow: \"hidden\",\n          }}\n        >\n          <div className=\"App\">\n            <Typography\n              id=\"heading\"\n              variant=\"h2\"\n              onClick={() => window.location.reload()}\n              style={{\n                width: \"max-content\",\n                cursor: \"pointer\",\n                textDecoration: \"underline var(--cyan) 5px\",\n                color: \"var(--blue)\",\n                padding: \".5em 0\",\n                fontWeight: \"normal\",\n                fontFamily: \"Roboto Slab\",\n                textAlign: \"left\",\n              }}\n            >\n              Albumsplit\n            </Typography>\n            {/* <Header /> */}\n            <Stepper\n              initialStepsContent={[\n                approveInfoStep,\n                downloadStep,\n                downloadButton,\n              ]}\n              handleSubmit={handleSubmit}\n              handleFinalize={handleFinalize}\n              albumUrl={albumUrl}\n              loading={loading}\n              setLoading={setLoading}\n              handleUrlChange={handleUrlChange}\n              zipUrl={zipUrl}\n              setActiveStep={setActiveStep}\n              activeStep={activeStep}\n            />\n          </div>\n        </Container>\n      </ThemeProvider>\n    </>\n  );\n}\nconst tc1 = [\n  [\"12:04\", \"Time code 1\"],\n  [\"12:04\", \"Time code 1\"],\n  [\"12:04\", \"Time code 1\"],\n  [\"12:04\", \"Time code 1\"],\n  [\"12:04\", \"Time code 1\"],\n  [\"12:04\", \"Time code 1\"],\n  [\"12:04\", \"Time code 1\"],\n  [\"12:04\", \"Time code 1\"],\n  [\"12:04\", \"Time code 1\"],\n  [\"12:04\", \"Time code 1\"],\n  [\"12:04\", \"Time code 1\"],\n];\nconst tc2 = [\n  [\"03:24\", \"Time code 2\"],\n  [\"03:24\", \"Time code 2\"],\n  [\"03:24\", \"Time code 2\"],\n  [\"03:24\", \"Time code 2\"],\n  [\"03:24\", \"Time code 2\"],\n  [\"03:24\", \"Time code 2\"],\n  [\"03:24\", \"Time code 2\"],\n  [\"03:24\", \"Time code 2\"],\n  [\"03:24\", \"Time code 2\"],\n];\nconst tc3 = [\n  [\"38:59\", \"Time code 3\"],\n  [\"38:59\", \"Time code 3\"],\n  [\"38:59\", \"Time code 3\"],\n  [\"38:59\", \"Time code 3\"],\n  [\"38:59\", \"Time code 3\"],\n  [\"38:59\", \"Time code 3\"],\n  [\"38:59\", \"Time code 3\"],\n  [\"38:59\", \"Time code 3\"],\n  [\"38:59\", \"Time code 3\"],\n  [\"38:59\", \"Time code 3\"],\n  [\"38:59\", \"Time code 3\"],\n  [\"38:59\", \"Time code 3\"],\n];\nconst tc4 = [\n  [\"38:59\", \"Time code 4\"],\n  [\"38:59\", \"Time code 4\"],\n  [\"38:59\", \"Time code 4\"],\n  [\"38:59\", \"Time code 4\"],\n  [\"38:59\", \"Time code 4\"],\n  [\"38:59\", \"Time code 4\"],\n  [\"38:59\", \"Time code 4\"],\n  [\"38:59\", \"Time code 4\"],\n  [\"38:59\", \"Time code 4\"],\n  [\"38:59\", \"Time code 4\"],\n  [\"38:59\", \"Time code 4\"],\n  [\"38:59\", \"Time code 4\"],\n];\nconst tc5 = [\n  [\"38:59\", \"Time code 5\"],\n  [\"38:59\", \"Time code 5\"],\n  [\"38:59\", \"Time code 5\"],\n  [\"38:59\", \"Time code 5\"],\n  [\"38:59\", \"Time code 5\"],\n  [\"38:59\", \"Time code 5\"],\n  [\"38:59\", \"Time code 5\"],\n  [\"38:59\", \"Time code 5\"],\n  [\"38:59\", \"Time code 5\"],\n  [\"38:59\", \"Time code 5\"],\n  [\"38:59\", \"Time code 5\"],\n  [\"38:59\", \"Time code 5\"],\n];\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}